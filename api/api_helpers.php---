<?php
/**
 * api/api_helpers.php - Librería de Funciones para la API de Hikvision
 *
 * Este archivo centraliza todas las funciones que interactúan directamente
 * con la API ISAPI de las cámaras.
 */

/**
 * Añade una matrícula a la lista blanca de una cámara específica.
 *
 * @param array $camera Array asociativo con 'ip', 'username', 'password', 'name'.
 * @param string $plate La matrícula a añadir.
 * @return array Un array con 'success' (bool) y 'message' (string).
 */
function addPlateToCameraWhitelist($camera, $plate) {
    $url = "http://{$camera['ip']}/ISAPI/AccessControl/vehicleRecord?format=json";
    
    // El payload para añadir a la lista blanca.
    $data = [
        "vehicleRecord" => [
            "plateNo" => $plate,
            "plateType" => "whiteList", // Siempre es whiteList para añadir
            "enable" => true
        ]
    ];
    
    $json_data = json_encode($data);
    $ch = curl_init();
    
    curl_setopt_array($ch, [
        CURLOPT_URL => $url,
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_HTTPAUTH => CURLAUTH_DIGEST,
        CURLOPT_USERPWD => "{$camera['username']}:{$camera['password']}",
        CURLOPT_CUSTOMREQUEST => "PUT", // El método para añadir/actualizar es PUT
        CURLOPT_POSTFIELDS => $json_data,
        CURLOPT_HTTPHEADER => ['Content-Type: application/json'],
        CURLOPT_TIMEOUT => 10,
        CURLOPT_CONNECTTIMEOUT => 5
    ]);
    
    $response = curl_exec($ch);
    $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    $curl_error = curl_error($ch);
    curl_close($ch);
    
    if ($curl_error) {
        return ['success' => false, 'message' => "Error de cURL con '{$camera['name']}': {$curl_error}"];
    }
    
    $response_data = json_decode($response, true);
    
    // La cámara responde 200 OK y el statusCode interno es 1 para éxito.
    if ($http_code == 200 && isset($response_data['ResponseStatus']['statusCode']) && $response_data['ResponseStatus']['statusCode'] == '1') {
        return ['success' => true, 'message' => "Matrícula '{$plate}' añadida a '{$camera['name']}'."];
    }
    
    // Manejo de errores comunes
    $error_msg = $response_data['ResponseStatus']['statusString'] ?? 'Respuesta desconocida';
    return ['success' => false, 'message' => "Error (HTTP {$http_code}) al sincronizar con '{$camera['name']}': {$error_msg}."];
}

/**
 * Elimina una matrícula de la lista blanca de una cámara.
 *
 * @param array $camera Array asociativo con 'ip', 'username', 'password', 'name'.
 * @param string $plate La matrícula a eliminar.
 * @return array Un array con 'success' (bool) y 'message' (string).
 */
function deletePlateFromCameraWhitelist($camera, $plate) {
    $url = "http://{$camera['ip']}/ISAPI/AccessControl/vehicleRecord/plateNo/{$plate}?format=json";
    
    $ch = curl_init();
    curl_setopt_array($ch, [
        CURLOPT_URL => $url,
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_HTTPAUTH => CURLAUTH_DIGEST,
        CURLOPT_USERPWD => "{$camera['username']}:{$camera['password']}",
        CURLOPT_CUSTOMREQUEST => "DELETE", // El método para eliminar es DELETE
        CURLOPT_TIMEOUT => 10,
        CURLOPT_CONNECTTIMEOUT => 5
    ]);

    $response = curl_exec($ch);
    $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    $curl_error = curl_error($ch);
    curl_close($ch);

    if ($curl_error) {
        return ['success' => false, 'message' => "Error cURL al eliminar de '{$camera['name']}': {$curl_error}"];
    }
    
    $response_data = json_decode($response, true);

    if ($http_code == 200 && isset($response_data['ResponseStatus']['statusCode']) && $response_data['ResponseStatus']['statusCode'] == '1') {
        return ['success' => true, 'message' => "Matrícula '{$plate}' eliminada de '{$camera['name']}'."];
    }

    $error_msg = $response_data['ResponseStatus']['statusString'] ?? 'Respuesta desconocida';
    return ['success' => false, 'message' => "Error (HTTP {$http_code}) al eliminar de '{$camera['name']}': {$error_msg}."];
}


// Aquí puedes añadir más funciones como getWhitelistFromCamera(), etc.

?>